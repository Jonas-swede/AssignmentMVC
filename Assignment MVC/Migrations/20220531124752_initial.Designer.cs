// <auto-generated />
using Assignment_MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment_MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220531124752_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment_MVC.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            CityName = "Stockholm",
                            CountryId = 1
                        },
                        new
                        {
                            CityID = 2,
                            CityName = "Göteborg",
                            CountryId = 1
                        },
                        new
                        {
                            CityID = 3,
                            CityName = "Oslo",
                            CountryId = 2
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Sverige"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Norge"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "Finland"
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            LanguageId = 1,
                            LanguageName = "English"
                        },
                        new
                        {
                            LanguageId = 2,
                            LanguageName = "Svenska"
                        },
                        new
                        {
                            LanguageId = 3,
                            LanguageName = "Norsk"
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CityID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CityID = 1,
                            Name = "Kalle",
                            PhoneNumber = "01234562"
                        },
                        new
                        {
                            id = 2,
                            CityID = 2,
                            Name = "Sten",
                            PhoneNumber = "01698941"
                        },
                        new
                        {
                            id = 3,
                            CityID = 2,
                            Name = "Börje",
                            PhoneNumber = "016161814"
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.PersonLanguage", b =>
                {
                    b.Property<int>("Personid")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Personid", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("PersonLanguage");

                    b.HasData(
                        new
                        {
                            Personid = 1,
                            LanguageId = 2
                        },
                        new
                        {
                            Personid = 2,
                            LanguageId = 2
                        },
                        new
                        {
                            Personid = 2,
                            LanguageId = 1
                        },
                        new
                        {
                            Personid = 3,
                            LanguageId = 3
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.City", b =>
                {
                    b.HasOne("Assignment_MVC.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment_MVC.Models.Person", b =>
                {
                    b.HasOne("Assignment_MVC.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment_MVC.Models.PersonLanguage", b =>
                {
                    b.HasOne("Assignment_MVC.Models.Language", "Language")
                        .WithMany("PersonLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_MVC.Models.Person", "Person")
                        .WithMany("PersonLanguages")
                        .HasForeignKey("Personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
